name: Build

on:
  push:
    branches: [ master, main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ master, main ]

env:
  GO_VERSION: '1.24'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux]
        goarch: [amd64, arm64]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Get dependencies
      run: go mod download

    - name: Run tests
      run: go test -v ./...

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        CGO_ENABLED: 0
      run: |
        # Set version info
        VERSION=${GITHUB_REF#refs/tags/}
        if [[ $VERSION == refs/* ]]; then
          VERSION="dev-${GITHUB_SHA::8}"
        fi

        COMMIT=$GITHUB_SHA
        DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ")

        # Build with version info
        go build \
          -ldflags="-s -w -X main.version=$VERSION -X main.commit=$COMMIT -X main.date=$DATE" \
          -o lightsshd-${{ matrix.goos }}-${{ matrix.goarch }} \
          ./cmd/lightsshd

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: lightsshd-${{ matrix.goos }}-${{ matrix.goarch }}
        path: lightsshd-${{ matrix.goos }}-${{ matrix.goarch }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          lightsshd-linux-amd64/lightsshd-linux-amd64
          lightsshd-linux-arm64/lightsshd-linux-arm64
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}